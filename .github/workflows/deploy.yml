name: Branch-Based Deployment

on:
  push:
    branches: [ main, preview ]
  pull_request:
    branches: [ main, preview ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Check if app starts
      run: |
        npm start &
        sleep 5
        curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 | grep -q "200" || exit 1
        pkill -f "node index.js"

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    name: Deploy to Production (Main Branch)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel (Production)
      run: |
        npm install -g vercel@latest
        vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Deploy to Railway (Production)
      run: |
        npm install -g @railway/cli
        echo ${{ secrets.RAILWAY_TOKEN }} | railway login
        railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}
        railway environment production
        railway up --service ${{ secrets.RAILWAY_SERVICE_ID }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-preview:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/preview'
    environment: preview
    name: Deploy to Preview (Preview Branch)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway (Preview)
      run: |
        npm install -g @railway/cli
        echo ${{ secrets.RAILWAY_TOKEN }} | railway login
        railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}
        railway environment preview
        railway up --service ${{ secrets.RAILWAY_PREVIEW_SERVICE_ID }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        NODE_ENV: preview

  deploy-preview-pr:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_name == 'main'
    environment: preview
    name: Deploy Preview for PR (Main â†’ Preview)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway (Preview for PR)
      run: |
        npm install -g @railway/cli
        echo ${{ secrets.RAILWAY_TOKEN }} | railway login
        railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}
        railway environment preview
        railway up --service ${{ secrets.RAILWAY_PREVIEW_SERVICE_ID }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        NODE_ENV: preview

  manual-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment }}
    name: Manual Deploy to ${{ github.event.inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Railway (${{ github.event.inputs.environment }})
      run: |
        npm install -g @railway/cli
        echo ${{ secrets.RAILWAY_TOKEN }} | railway login
        railway link --project ${{ secrets.RAILWAY_PROJECT_ID }}
        if [ "${{ github.event.inputs.environment }}" = "preview" ]; then
          railway environment preview
          railway up --service ${{ secrets.RAILWAY_PREVIEW_SERVICE_ID }}
          echo "NODE_ENV=preview" >> $GITHUB_ENV
        else
          railway environment production
          railway up --service ${{ secrets.RAILWAY_SERVICE_ID }}
        fi
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
